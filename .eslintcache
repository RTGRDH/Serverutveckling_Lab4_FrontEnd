[{"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/index.js":"1","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/App.js":"2","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/reportWebVitals.js":"3","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Login.js":"4","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/SignUp.js":"5","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Dashboard.js":"6","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/CreateLog.js":"7","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/OtherLogs.js":"8","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/MessageBox.js":"9","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/CreateMessage.js":"10","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Picture.js":"11","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Test.js":"12","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/CommunityFiles.js":"13"},{"size":500,"mtime":1610025830080,"results":"14","hashOfConfig":"15"},{"size":1421,"mtime":1610383771893,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609088585572,"results":"17","hashOfConfig":"15"},{"size":2424,"mtime":1610117836750,"results":"18","hashOfConfig":"15"},{"size":2105,"mtime":1610400070751,"results":"19","hashOfConfig":"15"},{"size":3885,"mtime":1610411139091,"results":"20","hashOfConfig":"15"},{"size":2255,"mtime":1610400463222,"results":"21","hashOfConfig":"15"},{"size":2492,"mtime":1610400470327,"results":"22","hashOfConfig":"15"},{"size":2446,"mtime":1610400463236,"results":"23","hashOfConfig":"15"},{"size":2516,"mtime":1610400463241,"results":"24","hashOfConfig":"15"},{"size":2189,"mtime":1610408985344,"results":"25","hashOfConfig":"15"},{"size":1042,"mtime":1610375706871,"results":"26","hashOfConfig":"15"},{"size":2193,"mtime":1610400463227,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"157zgdp",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/index.js",[],["60","61"],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/App.js",["62"],"import './App.css';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport React from \"react\";\nimport Login from './Pages/Login';\nimport SignUp from \"./Pages/SignUp\";\nimport Dashboard from \"./Pages/Dashboard\"\nimport CreateLog from \"./Pages/CreateLog\"\nimport OtherLogs from \"./Pages/OtherLogs\"\nimport MessageBox from \"./Pages/MessageBox\";\nimport CreateMessage from \"./Pages/CreateMessage\";\nimport Picture from \"./Pages/Picture\";\nimport Test from \"./Pages/Test\";\nimport CommunityFiles from \"./Pages/CommunityFiles\"\nfunction App() {\n  return (\n    <div className=\"App\">\n        <body className=\"body\">\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route path=\"/signup\" component={SignUp} />\n                <Route path=\"/dashboard\" component={Dashboard}/>\n                <Route path=\"/createLog\" component={CreateLog}/>\n                <Route path=\"/otherLogs\" component={OtherLogs}/>\n                <Route path=\"/messageBox\" component={MessageBox}/>\n                <Route path=\"/createMessage\" component={CreateMessage}/>\n                <Route path=\"/picture\" component={Picture}/>\n                <Route path={\"/test\"} component={Test}/>\n                <Route path={\"/communityFiles\"} component={CommunityFiles}/>\n            </Switch>\n        </BrowserRouter>\n        </body>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/reportWebVitals.js",[],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Login.js",["63","64","65","66","67","68"],"/*\n All types of forms such as login, sign up, create a log and send message is using code from following link:\nwww.cluemediator.com/login-app-create-login-form-in-reactjs-using-secure-rest-api\n*/\nimport '../Styles/Login.css'\nimport SignUp from \"./SignUp\";\nimport React, { useState } from 'react';\nimport { BrowserRouter, Switch, Route, NavLink, Link } from 'react-router-dom';\nfunction Login(props) {\n    const username = useFormInput('');\n    const password = useFormInput('');\n    const [error] = useState(null);\n\n    // handle button click of login form\n    const handleLogin = async () => {\n        let myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        let raw = JSON.stringify({\"username\": username.value, \"password\": password.value});\n        let requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        await fetch(\"http://localhost:6969/login\", requestOptions)\n            .then(response => {\n                console.log(response)\n                if(response.ok)\n                {\n                    sessionStorage.setItem('currentUser', ''+username.value+'');\n                    props.history.push('/dashboard');\n                }\n                else\n                {\n                    alert(\"User not found.\")\n                }\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    return (\n        <div className=\"container\">\n            <nav>\n                <Link to=\"/\">Login</Link>\n                <Link to=\"/signup\">Sign Up</Link>\n            </nav>\n            <Route path=\"/signup\" component={SignUp} />\n            <div className=\"Login\">\n                <h1>Login</h1>\n                <br/>\n                <label>Username</label>\n                <br/>\n                <input type=\"text\" {...username} autoComplete=\"new-password\" />\n                <br/>\n                <label>Password</label>\n                <br/>\n                <input type=\"password\" {...password} autoComplete=\"new-password\" />\n                <br/>\n            <button onClick={handleLogin}>Login</button>\n            </div>\n        </div>\n    );\n}\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    return {\n        value,\n        onChange: handleChange\n    }\n}\n\nexport default Login;","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/SignUp.js",["69","70","71","72","73","74","75"],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Dashboard.js",["76","77","78","79","80","81"],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/CreateLog.js",["82","83","84"],"import React, { useState } from 'react';\nimport {Link, Route} from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport '../Styles/CreateLog.css'\nfunction CreateLog(props) {\n    const subject = useFormInput('');\n    const content = useFormInput('');\n    const [error] = useState(null);\n\n    // handle button click of login form\n    const handleCreate = async () => {\n        var requestOptions = {\n            method: 'POST',\n            redirect: 'follow'\n        };\n        let url = \"http://localhost:6971/createLog?title=\" + subject.value +\"&content=\"+ content.value + \"&currentUser=\" + sessionStorage.getItem('currentUser');\n        fetch(url, requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n        setTimeout(() =>{props.history.push('/dashboard')},3000)\n    }\n\n    return (\n        <div className=\"container\">\n            <nav>\n                <Link to=\"/dashboard\">Dashboard</Link>\n                <Link to=\"/createLog\">Create a log</Link>\n                <Link to={\"/otherLogs\"}>Community Logs</Link>\n                <Link to={\"/messageBox\"}>Message Box</Link>\n                <Link to={\"/createMessage\"}>Write a message</Link>\n                <Link to={\"/picture\"}>Picture</Link>\n                <Link classname={\"logout\"} to={\"/\"}>Log Out</Link>\n            </nav>\n            <div className=\"Form\">\n                <h1>Create a log</h1>\n                <br/>\n                <label>Title</label>\n                <br/>\n                <input type=\"text\" {...subject} autoComplete=\"new-password\" />\n                <br/>\n                <label>Content</label>\n                <br/>\n                <input type=\"textarea\" {...content} autoComplete=\"new-password\" />\n                <br/>\n                <button onClick={handleCreate}>Create</button>\n            </div>\n        </div>\n    );\n}\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    return {\n        value,\n        onChange: handleChange\n    }\n}\n\nexport default CreateLog;","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/OtherLogs.js",["85","86"],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/MessageBox.js",[],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/CreateMessage.js",["87"],"import React, { useState } from 'react';\nimport {Link} from \"react-router-dom\";\nfunction CreateLog(props) {\n    const subject = useFormInput('');\n    const content = useFormInput('');\n    const toUser = useFormInput('');\n    const [error] = useState(null);\n\n    // handle button click of login form\n    const handleSend = async () => {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        var raw = JSON.stringify({\"title\":subject.value,\"content\":content.value,\"toUser\":{\"username\":toUser.value},\"fromUser\":{\"username\":sessionStorage.getItem('currentUser')}});\n\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        fetch(\"http://localhost:6970/sendMessage\", requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n        props.history.push('/dashboard');\n    }\n\n    return (\n        <div className=\"container\">\n            <nav>\n                <Link to=\"/dashboard\">Dashboard</Link>\n                <Link to=\"/createLog\">Create a log</Link>\n                <Link to={\"/otherLogs\"}>Community Logs</Link>\n                <Link to={\"/messageBox\"}>Message Box</Link>\n                <Link to={\"/createMessage\"}>Write a message</Link>\n                <Link to={\"/picture\"}>Picture</Link>\n            </nav>\n            <div className=\"Form\">\n                <h1>Write a message</h1>\n                <br/>\n                <label>To:</label>\n                <br/>\n                <input type=\"text\" {...toUser} autoComplete=\"new-password\" />\n                <br/>\n                <label>Title</label>\n                <br/>\n                <input type=\"text\" {...subject} autoComplete=\"new-password\" />\n                <br/>\n                <label>Content</label>\n                <br/>\n                <input type=\"textarea\" {...content} autoComplete=\"new-password\" />\n                <br/>\n                <button onClick={handleSend}>Create</button>\n            </div>\n        </div>\n    );\n}\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    return {\n        value,\n        onChange: handleChange\n    }\n}\n\nexport default CreateLog;","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Picture.js",["88","89"],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Test.js",[],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/CommunityFiles.js",["90"],"import React from 'react';\nimport '../Styles/OtherLogs.css';\nimport { Table } from 'react-bootstrap';\nimport {Link, Route} from \"react-router-dom\";\n\nclass CommunityFiles extends React.Component{\n    state = {\n        files:[]\n    }\n\n    componentWillMount() {\n        let requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n        };\n        let url = \"http://localhost:9001/getAll?currentUser=\" + sessionStorage.getItem('currentUser');\n        fetch(url, requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                this.setState({\n                    files: data\n                })\n                console.log(this.state.files);\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    render()\n    {\n        let files = this.state.files.map((files) => {\n            return (\n                <tr key={files.user}>\n                    <td>\n                        {files.user}\n                    </td>\n                    <td>\n                        {files.files}\n                    </td>\n                </tr>\n            )\n        });\n        return (\n            <div className=\"container\">\n                <nav>\n                    <Link to=\"/dashboard\">Dashboard</Link>\n                    <Link to=\"/createLog\">Create a log</Link>\n                    <Link to={\"/otherLogs\"}>Community Logs</Link>\n                    <Link to={\"/messageBox\"}>Message Box</Link>\n                    <Link to={\"/createMessage\"}>Write a message</Link>\n                    <Link to={\"/picture\"}>Picture</Link>\n                    <Link to={\"/communityFiles\"}>Files</Link>\n                    <Link classname={\"logout\"} to={\"/\"}>Log Out</Link>\n                </nav>\n                <h2>Community Files</h2>\n                <Table>\n                    <thead>\n                    <tr>\n                        <th>Användare</th>\n                        <th>Filnamn</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {files}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default CommunityFiles;",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":2,"column":40,"nodeType":"97","messageId":"98","endLine":2,"endColumn":47},{"ruleId":"95","severity":1,"message":"99","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":14},{"ruleId":"95","severity":1,"message":"100","line":8,"column":10,"nodeType":"97","messageId":"98","endLine":8,"endColumn":23},{"ruleId":"95","severity":1,"message":"101","line":8,"column":25,"nodeType":"97","messageId":"98","endLine":8,"endColumn":31},{"ruleId":"95","severity":1,"message":"102","line":8,"column":33,"nodeType":"97","messageId":"98","endLine":8,"endColumn":38},{"ruleId":"95","severity":1,"message":"96","line":8,"column":40,"nodeType":"97","messageId":"98","endLine":8,"endColumn":47},{"ruleId":"95","severity":1,"message":"103","line":12,"column":12,"nodeType":"97","messageId":"98","endLine":12,"endColumn":17},{"ruleId":"95","severity":1,"message":"100","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":22},{"ruleId":"95","severity":1,"message":"96","line":2,"column":24,"nodeType":"97","messageId":"98","endLine":2,"endColumn":31},{"ruleId":"95","severity":1,"message":"102","line":2,"column":33,"nodeType":"97","messageId":"98","endLine":2,"endColumn":38},{"ruleId":"95","severity":1,"message":"101","line":2,"column":40,"nodeType":"97","messageId":"98","endLine":2,"endColumn":46},{"ruleId":"95","severity":1,"message":"104","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":13},{"ruleId":"95","severity":1,"message":"103","line":8,"column":12,"nodeType":"97","messageId":"98","endLine":8,"endColumn":17},{"ruleId":"95","severity":1,"message":"105","line":9,"column":12,"nodeType":"97","messageId":"98","endLine":9,"endColumn":19},{"ruleId":"95","severity":1,"message":"106","line":1,"column":16,"nodeType":"97","messageId":"98","endLine":1,"endColumn":24},{"ruleId":"95","severity":1,"message":"100","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":23},{"ruleId":"95","severity":1,"message":"101","line":3,"column":25,"nodeType":"97","messageId":"98","endLine":3,"endColumn":31},{"ruleId":"95","severity":1,"message":"102","line":3,"column":33,"nodeType":"97","messageId":"98","endLine":3,"endColumn":38},{"ruleId":"95","severity":1,"message":"96","line":3,"column":40,"nodeType":"97","messageId":"98","endLine":3,"endColumn":47},{"ruleId":"95","severity":1,"message":"107","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":17},{"ruleId":"95","severity":1,"message":"102","line":2,"column":15,"nodeType":"97","messageId":"98","endLine":2,"endColumn":20},{"ruleId":"95","severity":1,"message":"108","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":17},{"ruleId":"95","severity":1,"message":"103","line":8,"column":12,"nodeType":"97","messageId":"98","endLine":8,"endColumn":17},{"ruleId":"95","severity":1,"message":"102","line":4,"column":15,"nodeType":"97","messageId":"98","endLine":4,"endColumn":20},{"ruleId":"95","severity":1,"message":"107","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":17},{"ruleId":"95","severity":1,"message":"103","line":7,"column":12,"nodeType":"97","messageId":"98","endLine":7,"endColumn":17},{"ruleId":"95","severity":1,"message":"109","line":10,"column":11,"nodeType":"97","messageId":"98","endLine":10,"endColumn":19},{"ruleId":"95","severity":1,"message":"110","line":34,"column":11,"nodeType":"97","messageId":"98","endLine":34,"endColumn":22},{"ruleId":"95","severity":1,"message":"102","line":4,"column":15,"nodeType":"97","messageId":"98","endLine":4,"endColumn":20},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'SignUp' is defined but never used.","'BrowserRouter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'error' is assigned a value but never used.","'Login' is defined but never used.","'loading' is assigned a value but never used.","'useState' is defined but never used.","'CreateLog' is defined but never used.","'Dashboard' is defined but never used.","'currUser' is assigned a value but never used.","'handleFetch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]