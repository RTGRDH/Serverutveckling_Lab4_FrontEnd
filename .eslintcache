[{"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/index.js":"1","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/App.js":"2","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/reportWebVitals.js":"3","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Login.js":"4","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/SignUp.js":"5","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Dashboard.js":"6"},{"size":500,"mtime":1610025830080,"results":"7","hashOfConfig":"8"},{"size":652,"mtime":1610113487872,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609088585572,"results":"10","hashOfConfig":"8"},{"size":2480,"mtime":1610046831681,"results":"11","hashOfConfig":"8"},{"size":2165,"mtime":1610046831730,"results":"12","hashOfConfig":"8"},{"size":2080,"mtime":1610113487874,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"157zgdp",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/index.js",[],["30","31"],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/App.js",["32"],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/reportWebVitals.js",[],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Login.js",["33","34","35","36"],"/*\n All types of forms such as login, sign up, create a log and send message is using code from following link:\nwww.cluemediator.com/login-app-create-login-form-in-reactjs-using-secure-rest-api\n*/\nimport '../Styles/Login.css'\nimport SignUp from \"./SignUp\";\nimport React, { useState } from 'react';\nimport { BrowserRouter, Switch, Route, NavLink, Link } from 'react-router-dom';\nfunction Login(props) {\n    const username = useFormInput('');\n    const password = useFormInput('');\n    const [error] = useState(null);\n\n    // handle button click of login form\n    const handleLogin = async () => {\n        let myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        let raw = JSON.stringify({\"username\": username.value, \"password\": password.value});\n        let requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        await fetch(\"http://localhost:6969/login\", requestOptions)\n            .then(response => {\n                console.log(response)\n                if(response.ok)\n                {\n                    sessionStorage.setItem('currentUser', ''+username.value+'');\n                    props.history.push('/dashboard');\n                }\n                else\n                {\n                    alert(\"User not found.\")\n                }\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    return (\n        <div className=\"container\">\n            <nav>\n                <Link to=\"/\">Login</Link>\n                <Link to=\"/signup\">Sign Up</Link>\n            </nav>\n            <Route path=\"/signup\" component={SignUp} />\n            <div className=\"Login\">\n                <h1>Login</h1>\n                <br/>\n                <label>Username</label>\n                <br/>\n                <input type=\"text\" {...username} autoComplete=\"new-password\" />\n                <br/>\n                <label>Password</label>\n                <br/>\n                <input type=\"password\" {...password} autoComplete=\"new-password\" />\n                <br/>\n            <button onClick={handleLogin}>Login</button>\n            </div>\n        </div>\n    );\n}\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    return {\n        value,\n        onChange: handleChange\n    }\n}\n\nexport default Login;","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/SignUp.js",["37","38","39","40","41"],"import React, { useState } from 'react';\nimport {BrowserRouter, NavLink, Route, Switch, Link} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport '../Styles/SignUp.css'\nfunction SignUp(props) {\n    const username = useFormInput('');\n    const password = useFormInput('');\n    const [error] = useState(null);\n    const [loading] = useState(false);\n\n    // handle button click of login form\n    const handleSignUp = async () => {\n        //props.history.push('/dashboard');\n        //let response = await fetch; //Getting data\n        let myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        let raw = JSON.stringify({\"username\": username.value, \"password\": password.value});\n        let requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        fetch(\"http://localhost:6969/addUser\", requestOptions)\n            .then(response => {\n                console.log(response)\n                props.history.push('/login')\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    return (\n        <div className=\"container\">\n            <nav>\n                <Link to=\"/\">Login</Link>\n                <Link  to=\"/signup\">Sign Up</Link>\n            </nav>\n            <Route exact path=\"/\" component={Login} />\n            <div className=\"SignUp\">\n                <h1>Sign Up</h1>\n                <br/>\n                <label>Username</label>\n                <br/>\n                <input type=\"text\" {...username} autoComplete=\"new-password\" />\n                <br/>\n                <label>Password</label>\n                <br/>\n                <input type=\"password\" {...password} autoComplete=\"new-password\" />\n                <br/>\n                <button onClick={handleSignUp}>Sign Up</button>\n            </div>\n        </div>\n    );\n}\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    return {\n        value,\n        onChange: handleChange\n    }\n}\n\nexport default SignUp;","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Dashboard.js",["42","43","44"],"import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { BrowserRouter, Switch, Route, NavLink, Link } from 'react-router-dom';\nimport '../Styles/Dashboard.css'\nclass Dashboard extends React.Component{\n    state = {\n        logs: []\n    }\n\n    componentWillMount() {\n        let requestOptions = {\n            method: 'POST',\n            redirect: 'follow'\n        };\n        let url = \"http://localhost:6971/getUsersLogs?currentUser=\" + sessionStorage.getItem('currentUser');\n        fetch(url, requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                this.setState({\n                    logs: data\n                })\n                console.log(this.state.logs);\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    render()\n    {\n        let logs = this.state.logs.map((log) => {\n            return (\n                <tr key={log.id}>\n                    <td>\n                        {log.title}\n                    </td>\n                    <td>\n                        {log.content}\n                    </td>\n                    <td>\n                        {log.user.username}\n                    </td>\n                </tr>\n            )\n        });\n        return (\n            <div className=\"container\">\n                <nav>\n                    <Link to=\"/dashboard\">Dashboard</Link>\n                    <Link to=\"/createLog\">Create a log</Link>\n                </nav>\n                <div className = \"Personliga Loggar\">\n                    <h3>Personal Logs</h3>\n                    <Table>\n                        <thead>\n                        <tr>\n                            <th>Titel</th>\n                            <th>Inneh√•ll</th>\n                            <th>Skapad Av</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {logs}\n                        </tbody>\n                    </Table>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Dashboard;",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":40,"nodeType":"51","messageId":"52","endLine":2,"endColumn":47},{"ruleId":"49","severity":1,"message":"53","line":8,"column":10,"nodeType":"51","messageId":"52","endLine":8,"endColumn":23},{"ruleId":"49","severity":1,"message":"54","line":8,"column":25,"nodeType":"51","messageId":"52","endLine":8,"endColumn":31},{"ruleId":"49","severity":1,"message":"50","line":8,"column":40,"nodeType":"51","messageId":"52","endLine":8,"endColumn":47},{"ruleId":"49","severity":1,"message":"55","line":12,"column":12,"nodeType":"51","messageId":"52","endLine":12,"endColumn":17},{"ruleId":"49","severity":1,"message":"53","line":2,"column":9,"nodeType":"51","messageId":"52","endLine":2,"endColumn":22},{"ruleId":"49","severity":1,"message":"50","line":2,"column":24,"nodeType":"51","messageId":"52","endLine":2,"endColumn":31},{"ruleId":"49","severity":1,"message":"54","line":2,"column":40,"nodeType":"51","messageId":"52","endLine":2,"endColumn":46},{"ruleId":"49","severity":1,"message":"55","line":8,"column":12,"nodeType":"51","messageId":"52","endLine":8,"endColumn":17},{"ruleId":"49","severity":1,"message":"56","line":9,"column":12,"nodeType":"51","messageId":"52","endLine":9,"endColumn":19},{"ruleId":"49","severity":1,"message":"53","line":3,"column":10,"nodeType":"51","messageId":"52","endLine":3,"endColumn":23},{"ruleId":"49","severity":1,"message":"54","line":3,"column":25,"nodeType":"51","messageId":"52","endLine":3,"endColumn":31},{"ruleId":"49","severity":1,"message":"50","line":3,"column":40,"nodeType":"51","messageId":"52","endLine":3,"endColumn":47},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Switch' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]