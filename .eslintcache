[{"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/index.js":"1","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/App.js":"2","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/reportWebVitals.js":"3","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Login.js":"4","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/SignUp.js":"5","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Dashboard.js":"6","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/CreateLog.js":"7","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/OtherLogs.js":"8","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/MessageBox.js":"9","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/CreateMessage.js":"10","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/CommunityFiles.js":"11"},{"size":500,"mtime":1610548341223,"results":"12","hashOfConfig":"13"},{"size":1231,"mtime":1610548341213,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610548341224,"results":"15","hashOfConfig":"13"},{"size":2355,"mtime":1610560590374,"results":"16","hashOfConfig":"13"},{"size":2040,"mtime":1610560590424,"results":"17","hashOfConfig":"13"},{"size":3789,"mtime":1610560590368,"results":"18","hashOfConfig":"13"},{"size":2170,"mtime":1610560590384,"results":"19","hashOfConfig":"13"},{"size":2403,"mtime":1610560590391,"results":"20","hashOfConfig":"13"},{"size":2405,"mtime":1610560590438,"results":"21","hashOfConfig":"13"},{"size":2515,"mtime":1610560590353,"results":"22","hashOfConfig":"13"},{"size":2208,"mtime":1610560424780,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"157zgdp",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/index.js",[],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/App.js",["51"],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/reportWebVitals.js",[],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Login.js",["52"],"/*\n All types of forms such as login, sign up, create a log and send message is using code from following link:\nwww.cluemediator.com/login-app-create-login-form-in-reactjs-using-secure-rest-api\n*/\nimport '../Styles/Login.css'\nimport React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nfunction Login(props) {\n    const username = useFormInput('');\n    const password = useFormInput('');\n    const [error] = useState(null);\n\n    // handle button click of login form\n    const handleLogin = async () => {\n        let myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        let raw = JSON.stringify({\"username\": username.value, \"password\": password.value});\n        let requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        await fetch(\"http://user-backend:6969/login\", requestOptions)\n            .then(response => {\n                console.log(response)\n                if(response.ok)\n                {\n                    sessionStorage.setItem('currentUser', ''+username.value+'');\n                    props.history.push('/dashboard');\n                }\n                else\n                {\n                    alert(\"User not found.\")\n                }\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    return (\n        <div className=\"container\">\n            <nav>\n                <Link to=\"/\">Login</Link>\n                <Link to=\"/signup\">Sign Up</Link>\n            </nav>\n            <div className=\"Login\">\n                <h1>Login</h1>\n                <br/>\n                <label>Username</label>\n                <br/>\n                <input type=\"text\" {...username} autoComplete=\"new-password\" />\n                <br/>\n                <label>Password</label>\n                <br/>\n                <input type=\"password\" {...password} autoComplete=\"new-password\" />\n                <br/>\n            <button onClick={handleLogin}>Login</button>\n            </div>\n        </div>\n    );\n}\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    return {\n        value,\n        onChange: handleChange\n    }\n}\n\nexport default Login;",["53","54"],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/SignUp.js",["55","56"],"import React, { useState } from 'react';\nimport {Link} from \"react-router-dom\";\nimport '../Styles/SignUp.css'\nfunction SignUp(props) {\n    const username = useFormInput('');\n    const password = useFormInput('');\n    const [error] = useState(null);\n    const [loading] = useState(false);\n\n    // handle button click of login form\n    const handleSignUp = async () => {\n        //props.history.push('/dashboard');\n        //let response = await fetch; //Getting data\n        let myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        let raw = JSON.stringify({\"username\": username.value, \"password\": password.value});\n        let requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        fetch(\"http://user-backend:6969/addUser\", requestOptions)\n            .then(response => {\n                console.log(response)\n                props.history.push('/')\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    return (\n        <div className=\"container\">\n            <nav>\n                <Link to=\"/\">Login</Link>\n                <Link  to=\"/signup\">Sign Up</Link>\n            </nav>\n            <div className=\"SignUp\">\n                <h1>Sign Up</h1>\n                <br/>\n                <label>Username</label>\n                <br/>\n                <input type=\"text\" {...username} autoComplete=\"new-password\" />\n                <br/>\n                <label>Password</label>\n                <br/>\n                <input type=\"password\" {...password} autoComplete=\"new-password\" />\n                <br/>\n                <button onClick={handleSignUp}>Sign Up</button>\n            </div>\n        </div>\n    );\n}\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    return {\n        value,\n        onChange: handleChange\n    }\n}\n\nexport default SignUp;","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/Dashboard.js",["57"],"import React, {useState} from 'react';\nimport { Table } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport '../Styles/Dashboard.css'\nclass Dashboard extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            logs: [],\n            image:null\n        }\n        this.currUser = sessionStorage.getItem('currentUser')\n        this.handleChange = this.handleChange.bind(this)\n        this.handleUpload = this.handleUpload.bind(this)\n    }\n    componentWillMount() {\n        let requestOptions = {\n            method: 'POST',\n            redirect: 'follow'\n        };\n        let url = \"http://log-backend:6971/getUsersLogs?currentUser=\" + sessionStorage.getItem('currentUser');\n        fetch(url, requestOptions)\n            .then(response => response.json())\n            .then((data) => {\n                this.setState({\n                    logs: data\n                })\n                console.log(this.state.logs);\n            })\n            .catch(error => console.log('error', error));\n    }\n    async handleUpload (e){\n        e.preventDefault();\n        let formData = new FormData();\n        console.log(this.state.image == null)\n        formData.append(\"picture\", this.state.image); //a key\n        fetch(\"http://file-backend:6972/addFile?name=\" + sessionStorage.getItem('currentUser'), {\n            method: \"POST\",\n            headers: {\n            },\n            body: formData\n        });\n        this.setState({\n            image:null\n        })\n    };\n    handleChange (e){\n        if (e.target.files.length) {\n            this.setState({\n                image: e.target.files[0]\n            })\n            console.log(this.state.image)\n        }\n    };\n    render()\n    {\n        let logs = this.state.logs.map((log) => {\n            return (\n                <tr key={log.id}>\n                    <td>\n                        {log.title}\n                    </td>\n                    <td>\n                        {log.content}\n                    </td>\n                    <td>\n                        {log.user.username}\n                    </td>\n                </tr>\n            )\n        });\n        return (\n            <div className=\"container\">\n                <nav>\n                    <Link to=\"/dashboard\">Dashboard</Link>\n                    <Link to=\"/createLog\">Create a log</Link>\n                    <Link to={\"/otherLogs\"}>Community Logs</Link>\n                    <Link to={\"/messageBox\"}>Message Box</Link>\n                    <Link to={\"/createMessage\"}>Write a message</Link>\n                    <Link to={\"/communityFiles\"}>Community Files</Link>\n                    <Link classname={\"logout\"} to={\"/\"}>Log Out</Link>\n                </nav>\n                <div className = \"personalLogs\">\n                    <h3>Personal Logs</h3>\n                    <Table>\n                        <thead>\n                        <tr>\n                            <th>Titel</th>\n                            <th>Innehåll</th>\n                            <th>Skapad Av</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {logs}\n                        </tbody>\n                    </Table>\n                </div>\n                <div className=\"upload\">\n                    <h1>Upload file</h1>\n                    <label className=\"custom-file-upload\">\n                        <input type=\"file\" id=\"actual-btn\" onChange={this.handleChange}/>\n                        <i className=\"fa fa-cloud-upload\"></i> Select File\n                    </label>\n                    <br/>\n                    <button onClick={this.handleUpload}>Upload</button>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Dashboard;","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/CreateLog.js",["58"],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/OtherLogs.js",[],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/MessageBox.js",[],"/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/CreateMessage.js",["59"],"import React, { useState } from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"../Styles/CreateMessage.css\";\nfunction CreateLog(props) {\n    const subject = useFormInput('');\n    const content = useFormInput('');\n    const toUser = useFormInput('');\n    const [error] = useState(null);\n\n    const handleSend = async () => {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        var raw = JSON.stringify({\"title\":subject.value,\"content\":content.value,\"toUser\":{\"username\":toUser.value},\"fromUser\":{\"username\":sessionStorage.getItem('currentUser')}});\n\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        };\n\n        fetch(\"http://message-backend:6970/sendMessage\", requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(result))\n            .catch(error => console.log('error', error));\n        props.history.push('/dashboard');\n    }\n\n    return (\n        <div className=\"container\">\n            <nav>\n                <Link to=\"/dashboard\">Dashboard</Link>\n                <Link to=\"/createLog\">Create a log</Link>\n                <Link to={\"/otherLogs\"}>Community Logs</Link>\n                <Link to={\"/messageBox\"}>Message Box</Link>\n                <Link to={\"/createMessage\"}>Write a message</Link>\n                <Link to={\"/communityFiles\"}>Community Files</Link>\n                <Link classname={\"logout\"} to={\"/\"}>Log Out</Link>\n            </nav>\n            <div className=\"Form\">\n                <h1>Write a message</h1>\n                <br/>\n                <label>To:</label>\n                <br/>\n                <input type=\"text\" {...toUser} autoComplete=\"new-password\" />\n                <br/>\n                <label>Title</label>\n                <br/>\n                <input type=\"text\" {...subject} autoComplete=\"new-password\" />\n                <br/>\n                <label>Content</label>\n                <br/>\n                <input type=\"textarea\" {...content} autoComplete=\"new-password\" />\n                <br/>\n                <button onClick={handleSend}>Send</button>\n            </div>\n        </div>\n    );\n}\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    return {\n        value,\n        onChange: handleChange\n    }\n}\n\nexport default CreateLog;","/Users/ernstreutergardh/IdeaProjects/serverutveckling_lab4_frontend/src/Pages/CommunityFiles.js",[],{"ruleId":"60","severity":1,"message":"61","line":2,"column":40,"nodeType":"62","messageId":"63","endLine":2,"endColumn":47},{"ruleId":"60","severity":1,"message":"64","line":11,"column":12,"nodeType":"62","messageId":"63","endLine":11,"endColumn":17},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"60","severity":1,"message":"64","line":7,"column":12,"nodeType":"62","messageId":"63","endLine":7,"endColumn":17},{"ruleId":"60","severity":1,"message":"69","line":8,"column":12,"nodeType":"62","messageId":"63","endLine":8,"endColumn":19},{"ruleId":"60","severity":1,"message":"70","line":1,"column":16,"nodeType":"62","messageId":"63","endLine":1,"endColumn":24},{"ruleId":"60","severity":1,"message":"64","line":7,"column":12,"nodeType":"62","messageId":"63","endLine":7,"endColumn":17},{"ruleId":"60","severity":1,"message":"64","line":8,"column":12,"nodeType":"62","messageId":"63","endLine":8,"endColumn":17},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"'loading' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]